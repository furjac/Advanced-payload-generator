#!/usr/bin/python
# -*- coding:utf-8 -*-

import os
import sys
import warnings
import tqdm

import libtorrent as lt
import time
import datetime

from selenium import webdriver
from selenium.webdriver.common.keys import Keys

warnings.filterwarnings("ignore")

urls = []
picture = []
tamilmv = []
tamilmv_urls = []


def site_pirate_bay():
    options = webdriver.ChromeOptions()
    options.add_argument('--headless=chrome')
    options.add_extension('/usr/bin/ad.zip')
    options.add_experimental_option("detach", True)
    options.add_argument('--allow-running-insecure-content')

    driver = webdriver.Chrome(executable_path='/usr/bin/chromedriver', options=options)
    driver.get('https://pbays.top/')
    time.sleep(5)
    driver.find_element("xpath", '//*[@id="all"]').click()
    driver.find_element("xpath", '//*[@id="video"]').click()

    s1 = driver.find_element("xpath", '//*[@id="inp"]/input')
    s1.send_keys(ask)
    s1.send_keys(Keys.ENTER)
    time.sleep(1)

    titles = driver.find_elements('xpath', '//div[contains(@class, "detName")] //a')

    for movies in titles:
        picture.append(movies.text)
        urls.append(movies.get_attribute('href'))

    time.sleep(10)

    driver.quit()


def download():
    ses = lt.session()
    ses.listen_on(6881, 6891)

    params = {
        'save_path': dir,
        'storage_mode': lt.storage_mode_t(2)
    }

    handle = lt.add_magnet_uri(ses, link, params)
    ses.start_dht()

    print("\nDownloading...",handle.name())

    while not handle.has_metadata():
        time.sleep(1)

    total_size = handle.status().total_wanted
    pbar = tqdm.tqdm(total=total_size, unit="B", unit_scale=True, unit_divisor=1024)

    while handle.status().state != lt.torrent_status.seeding:
        s = handle.status()
        pbar.update(s.total_download - pbar.n)
        time.sleep(1)

    pbar.close()
    print("\nDownload complete!")


def down():
    global link
    if picked == '0':
        r = 0
    elif picked == '1':
        r = 1
    elif picked == '2':
        r = 2
    elif picked == '3':
        r = 3
    elif picked == '4':
        r = 4
    elif picked == '5':
        r = 5
    elif picked == '6':
        r = 6
    elif picked == '7':
        r = 7
    elif picked == '8':
        r = 8
    elif picked == '9':
        r = 9
    elif picked == '10':
        r = 10
    elif picked == '11':
        r = 11
    elif picked == '12':
        r = 12
    elif picked == '13':
        r = 13
    elif picked == '14':
        r = 14
    elif picked == '15':
        r = 15
    elif picked == '16':
        r = 16
    elif picked == '17':
        r = 17
    elif picked == '18':
        r = 18
    elif picked == '19':
        r = 19
    elif picked == '20':
        r = 20
    elif picked == '21':
        r = 21
    elif picked == '22':
        r = 22
    elif picked == '23':
        r = 23
    elif picked == '24':
        r = 24
    elif picked == '25':
        r = 25
    elif picked == '26':
        r = 26
    elif picked == '27':
        r = 27
    elif picked == '28':
        r = 28
    elif picked == '29':
        r = 29
    else:
        print('invalid input \nexiting!')
        sys.exit(0)

    print('\nplease be patient your download will begin in few seconds')
    options = webdriver.ChromeOptions()
    options.add_argument('--headless=chrome')
    options.add_extension('/usr/bin/ad.zip')
    options.add_argument("--disable-gpu")
    options.add_experimental_option("detach", True)
    options.add_argument('--allow-running-insecure-content')

    driver = webdriver.Chrome(executable_path='/usr/bin/chromedriver', options=options)
    driver.get(urls[r])
    link = driver.find_element('xpath', '//*[@id="details"]/div[3]/div[1]/a[1]').get_attribute('href')
    driver.quit()
    download()


def start():
    global ask, dir, picture, picked
    os.system('clear')
    ask = input('\nEnter the movie name: ')
    dir = input('\nwhere would u like to store the movie(/path/to/download): ')

    site_pirate_bay()

    if not picture:
        print('the movie does not exist or not found')
        sys.exit(0)

    for number, movie in enumerate(picture):
        print("\n", number, movie)

    picked = input('\nFG_Teams: ')

    down()


def ask():
    global which_to_use
    os.system('clear')
    print('Hello guys too many movies movies will not be available on all sites')
    print('\n1. piratebay (default)')
    print('other options coming soon')

    which_to_use = input('\n\n\nFG_Teams: ')


if __name__ == '__main__':
    try:
        ask()
        if which_to_use == '1':
            start()
        elif which_to_use == '':
            start()
        else:
            print('invalid argument exiting!')
            sys.exit(0)
    except KeyboardInterrupt:
        print('\nExit signal received \nexiting ')
        sys.exit(0)
